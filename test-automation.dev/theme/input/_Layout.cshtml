@using System.Diagnostics
@using Statiq.Razor

@{
    var title = Document.GetString("PageTitle");
}

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="/assets/css/styles.css" rel="stylesheet"/>
        <title>@title</title>
        <link rel="icon" type="image/x-icon" href="/assets/favicon.ico">
    </head>
    <body >
        <div class="header">
            <div class="left-vertical center-horizontal ">
                <a class="no-link" href="/">
                    <img class="test-automation-header-logo" src="/assets/img/logo.svg" alt="Logo"  />
                </a>
            </div>
        </div>

        <div class="header-content-line" ></div>

        <div class="toc">
            @if (Document.GetBool("includeToc", true))
            {
                var pages = this.OutputPages.GetDescendantsOf(this.Document, false);

                if (pages.Count() == 0)
                {
                    var parent = this.OutputPages.GetAncestorsOf(this.Document).FirstOrDefault();

                    if (parent != null)
                    {
                        pages = this.OutputPages.GetDescendantsOf(parent, false);
                    }
                }

                var groups = from p in pages
                            let topic_title = p.GetString("topic_title", "Title not defined")
                            let order = p.GetString("order", "0")
                            group p by new { topic_title, order } into g
                            select new {
                                TopicTitle = g.Key.topic_title,
                                Order = g.Key.order,
                                Pages = g.ToList()
                            };

                foreach (var group in groups.OrderBy(x => x.Order))
                {
                    <div class="toc-group">

                        <h2>@group.TopicTitle</h2>
                        <ul>
                            @foreach (var page in group.Pages)
                            {
                                <li>
                                    @Html.DocumentLink(page, page.GetString("title"))
                                </li>
                            }
                        </ul>
                    </div>
                }
            }
        </div>

        <div class="article">
            @RenderBody() 
        </div>

        <div class="content-footer-line" ></div>

        <div class="footer" >
            <div class="center-vertical center-horizontal" style="height: 5vh;">
                Â© 2023 Copyright:&nbsp;<a href="https://willich.io/" >Andreas "SabotageAndi" Willich</a>&nbsp;-&nbsp;<a href="/impressum.html">Impressum</a>
            </div>
        </div>
    </body>
</html>